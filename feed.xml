<?xml version='1.0' encoding='UTF-8'?>
<rss version='2.0' xmlns:atom='http://www.w3.org/2005/Atom'>
<channel>
<atom:link href='http://firesofmay.github.io/' rel='self' type='application/rss+xml'/>
<title>
firesofmay
</title>
<link>
http://firesofmay.github.io/
</link>
<description>
Firesofmay's Blog
</description>
<lastBuildDate>
Sun, 29 May 2016 16:59:11 +0530
</lastBuildDate>
<generator>
clj-rss
</generator>
<item>
<guid>
http://firesofmay.github.io/posts/2016-05-29-sed-and-awk.html
</guid>
<link>
http://firesofmay.github.io/posts/2016-05-29-sed-and-awk.html
</link>
<title>
Using linux utilities in a real world usecase
</title>
<description>
&lt;h2&gt;&lt;a name=&quot;real&amp;#95;world&amp;#95;problem&quot;&gt;&lt;/a&gt;Real world problem&lt;/h2&gt;Today we are going to see what &lt;code&gt;sed&lt;/code&gt; and a little bit of &lt;code&gt;awk&lt;/code&gt; are and how we can use it in &lt;a href='https://en.wikipedia.org/wiki/Penetration&amp;#95;test'&gt;Pen Testing&lt;/a&gt;. I'll assume you are using any linux machine and are familiar with how to open the command line.&lt;p&gt;In 2011 a hacker group called &lt;a href='https://en.wikipedia.org/wiki/Anonymous&amp;#95;(group'&gt;Anonymous&lt;/a&gt;) attacked &lt;a href='rootkit.com'&gt;rootkit.com&lt;/a&gt; and uploaded the whole database of the site online. Its a huge database. With some &lt;em&gt;80,000+&lt;/em&gt; users and many other information in it.&lt;/p&gt;&lt;p&gt;Lets say we are the Pen Testers. And we just got hold of that huge database. Inside the database there are many tables, but the one that is of your interest is called &lt;code&gt;people&lt;/code&gt; and it has many fields, but you are interested in only the &lt;em&gt;username&lt;/em&gt; and its &lt;em&gt;hashed password&lt;/em&gt;. We want to extract all the username and its hash in this format&lt;/p&gt;&lt;pre&gt;&lt;code&gt;userid1:password1
userid2:password2
....
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You certainly can't do this manually. And it doesn't suit us doing manual work, Ahmm .. &lt;code&gt;Ctrl-C -&amp;gt; Ctrl-V&lt;/code&gt; :)&lt;/p&gt;&lt;p&gt;We like to do things fast and smart.... right? ;) sed, grep &amp; awk  too) to the rescue!&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;what&amp;#95;is&amp;#95;sed?&quot;&gt;&lt;/a&gt;What is sed?&lt;/h2&gt;&lt;p&gt;So what is this... &lt;em&gt;sed&lt;/em&gt;?&lt;/p&gt;&lt;p&gt;&lt;code&gt;sed&lt;/code&gt; is a Stream Editor in which we feed some text, and it processes them line by line and performs some commands which manipulate the text in the way we want. For example We can replace all &lt;code&gt;&amp;lt;SPACE&amp;gt;&lt;/code&gt; to &lt;code&gt;:&lt;/code&gt; OR replace all the occurrences of the string &lt;code&gt;hello&lt;/code&gt; to &lt;code&gt;hi&lt;/code&gt; and many awesome stuffs. Hold ...Hold, before you say  &lt;em&gt;&quot;Big deal! I can do that with &lt;code&gt;Replace All&lt;/code&gt; command in my Notepad&quot;&lt;/em&gt;  (yeah even I thought the same before I learned sed)&lt;/p&gt;&lt;p&gt;OK, Lets start the Magic Show!&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;explore&amp;#95;the&amp;#95;problem&quot;&gt;&lt;/a&gt;Explore the problem&lt;/h2&gt;Here's the &lt;a href='https://dl.dropboxusercontent.com/u/6104759/blog-data/rootkit&amp;#95;com&amp;#95;mysqlbackup&amp;#95;02&amp;#95;06&amp;#95;11.gz'&gt;link&lt;/a&gt;, download the gzip file &lt;code&gt;rootkit&amp;#95;com&amp;#95;mysqlbackup&amp;#95;02&amp;#95;06&amp;#95;11.gz&lt;/code&gt;, and paste it in any folder in your Linux machine.&lt;p&gt;Once you have downloaded the file, rename the file so that its small&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ mv rootkit&amp;#95;com&amp;#95;mysqlbackup&amp;#95;02&amp;#95;06&amp;#95;11.gz database.gz
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now we need to decompress the file.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ gunzip database.gz
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now that you have decompressed it, you should have a file called &lt;code&gt;database&lt;/code&gt; (without any &lt;code&gt;.gz&lt;/code&gt;)&lt;/p&gt;&lt;p&gt;OK. Just to get a feel of how BIG the database is just run &lt;code&gt;cat&lt;/code&gt; command on the database file, go have some coke, sleep and come back. :) No, don't worry, it is possible to extract fields from this huge file in a very clever yet elegant way. Hold On, magic is about to begin.&lt;/p&gt;&lt;p&gt;OK. First we need to know what we are dealing with. Open database file in &lt;code&gt;vim&lt;/code&gt;. We will search for all the Create Table Statements. Do&lt;/p&gt;&lt;pre&gt;&lt;code&gt;/CREATE TABLE &amp;#91;ENTER&amp;#93;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and keep pressing &lt;code&gt;n&lt;/code&gt; for next occurrence of the given string. You will notice that there are so many tables in this database. Keep going till you hit the &lt;code&gt;people&lt;/code&gt; database. Saw? Okay good. &lt;/p&gt;&lt;p&gt;Now keep going down (using down arrow key) slowly and keep noticing the fields (yeah there are many fields in this table). You will hit the insert into table and notice that the insert into line span for multiple lines.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;INSERT INTO `people` VALUES &amp;#40;1,'admin','51a42fa118e77f95f70d4efff4395f8d','rootkit sysop','hoglund@rootkit.com',10,0,'','','','','','',0,'http://www.rootkit.com/usericons/admin.jpg','',1296966693,'213.243.145.60',1296705113,1283501911,1296457930,1294556469,1294942812,0,0,'','','','','',-1,'P'&amp;#41;,&amp;#40;2,'aaronh','7cb8b36d','Aaron Heady','hackdoctor@aol.com',1,0,'','','','','','',0,'http://www.rootkit.com/usericons/aaronh.jpg','',0,'',0,0,0,0,0,0,0,'','0','','','',-1,''&amp;#41;,&amp;#40;3,'abcdef','e80

..........................................................and so on
&lt;/code&gt;&lt;/pre&gt;To be sure that one line is really spanning multiple lines do the following command inside Vim&lt;pre&gt;&lt;code&gt;&amp;lt;ESC&amp;gt; :set nu
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And it should show you the line number at which insert into is. If you are at first insert into&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;#40;1,'admin','51a42fa118e77f95f70d4efff4395f8d','rootkit...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;then the line should be &lt;code&gt;425&lt;/code&gt;. Anyway the point was it is spanning multiple lines. It is important to know this. Why? Because &lt;code&gt;cut&lt;/code&gt; command cuts per line. What is this &lt;code&gt;cut&lt;/code&gt; command you ask? We will see that later in detail. The mist is about to clear. Forget &lt;code&gt;cut&lt;/code&gt; for now.&lt;/p&gt;&lt;p&gt;Now that you know what lines you want to work on i.e. &lt;/p&gt;&lt;pre&gt;&lt;code&gt;INSERT INTO `people`
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(Note around people is not single quotes but backtick, which lies above the tab key)&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;grep&amp;#95;-&amp;#95;print&amp;#95;lines&amp;#95;matching&amp;#95;a&amp;#95;pattern&quot;&gt;&lt;/a&gt;grep - print lines matching a pattern&lt;/h2&gt;&lt;p&gt;To select only particular lines from this file we will use &lt;code&gt;grep&lt;/code&gt; command. &lt;code&gt;grep&lt;/code&gt; command takes a file as input and one or more strings to match. The lines that are matched are returned from that file.&lt;/p&gt;&lt;p&gt;OK quit from the vim. To quit do&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;ESC&amp;gt; :q!
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Oh just press &lt;code&gt;Ctrl-l&lt;/code&gt; to clear the screen. :) if you are wondering how to clear so much clutter on the screen.&lt;/p&gt;&lt;p&gt;OK Do,&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ grep &amp;quot;INSERT INTO \`people\`&amp;quot; database
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You will see a huge amount of output even now, but don't worry we have extracted out only the following statements.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;INSERT INTO `people`
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Wait why we put those &lt;strong&gt;&amp;#92;&lt;/strong&gt; in front of Backticks? Because backticks are special characters and we want linux to treat them as normal characters. To make any special character normal character we put &lt;strong&gt;&amp;#92;&lt;/strong&gt; in front of them.&lt;/p&gt;&lt;p&gt;Ok. Now Very Important part. Each insert into statement is inserting many values within.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;#40;1,'admin',...&amp;#41;,&amp;#40;2, 'aaronh',....&amp;#41; etc
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;a name=&quot;let's&amp;#95;use&amp;#95;sed&quot;&gt;&lt;/a&gt;Let's use sed&lt;/h2&gt;&lt;p&gt;To simplify things we are going to put each row of value in seperate line. How we are going to do this? By asking &lt;code&gt;sed&lt;/code&gt; to substitute &lt;code&gt;&amp;#41;,&amp;#40;&lt;/code&gt; with a newline. Why &lt;code&gt;&amp;#41;,&amp;#40;&lt;/code&gt; ? Because that is where your one row is ending and a new one is beginning.&lt;/p&gt;&lt;p&gt;So we do,&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ grep &amp;quot;INSERT INTO \`people\`&amp;quot; database | sed s/\&amp;#41;,\&amp;#40;/\\n/g
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Ok. Is that too much? :) Let me explain.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Following is what we did before.&lt;pre&gt;&lt;code&gt;grep &amp;quot;INSERT INTO \`people\`&amp;quot; database
&lt;/code&gt;&lt;/pre&gt;	&lt;/li&gt;&lt;li&gt;&lt;code&gt;|&lt;/code&gt;&lt;ul&gt;&lt;li&gt;This is the pipe command.&lt;/li&gt;&lt;li&gt;It passes the output of one command as input to the other command.&lt;/li&gt;&lt;li&gt;The selected text from the grep command is passed as input to the sed command. Simple!    &lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;In the following:&lt;/li&gt;&lt;/ol&gt;&lt;pre&gt;&lt;code&gt;sed s/\&amp;#41;\,\&amp;#40;/\\n/g
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;- Here &lt;code&gt;s&lt;/code&gt; stands for substitute.&lt;/li&gt;&lt;li&gt;- what to replace is told after the first &lt;code&gt;/&lt;/code&gt; i.e. to replace string &lt;code&gt;&amp;#41;,&amp;#40;&lt;/code&gt;&lt;/li&gt;&lt;li&gt;- We added &lt;strong&gt;&amp;#92;&lt;/strong&gt; before &lt;code&gt;&amp;#41;&lt;/code&gt; and &lt;code&gt;&amp;#40;&lt;/code&gt; so that its treated as normal characters not special characters.&lt;/li&gt;&lt;li&gt;- 2nd &lt;strong&gt;/&lt;/strong&gt; specifies the string to replace with to replace with string is newline, i.e. &lt;code&gt;\n&lt;/code&gt; but since &lt;strong&gt;&amp;#92;&lt;/strong&gt; is a special character we make it normal character buy adding one more &lt;strong&gt;&amp;#92;&lt;/strong&gt; :)&lt;/li&gt;&lt;li&gt;- 3rd &lt;strong&gt;/&lt;/strong&gt; specifies substitute all the occurrences (g = global) of the &lt;code&gt;,&lt;/code&gt; to replace string&lt;/li&gt;&lt;li&gt;- Note Replacing a string and putting a newline is something you cannot do in notepad with replace All :)&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;a name=&quot;peek&amp;#95;the&amp;#95;output&amp;#95;with&amp;#95;head&quot;&gt;&lt;/a&gt;peek the output with head&lt;/h2&gt;&lt;p&gt;Now when you run the command, you yet cant see the output. Append the command with a &lt;code&gt;head&lt;/code&gt; command. By default &lt;code&gt;head&lt;/code&gt; command outputs only first ten lines of text file given (and &lt;code&gt;tail&lt;/code&gt; command does the opposite)&lt;/p&gt;&lt;p&gt;So just do&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ grep &amp;quot;INSERT INTO \`people\`&amp;quot; database | sed s/\&amp;#41;,\&amp;#40;/\\n/g | head  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and this should be the output&lt;/p&gt;&lt;pre&gt;&lt;code&gt;.....
INSERT INTO `people` VALUES &amp;#40;1,'admin','51a42fa118e77f95f70d4efff4395f8d','rootkit sysop','hoglund@rootkit.com',10,0,'','','','','','',0,'http://www.rootkit.com/usericons/admin.jpg','',1296966693,'213.243.145.60',1296705113,1283501911,1296457930,1294556469,1294942812,0,0,'','','','','',-1,'P'
2,'aaronh','7cb8b36d','Aaron Heady','hackdoctor@aol.com',1,0,'','','','','','',0,'http://www.rootkit.com/usericons/aaronh.jpg','',0,'',0,0,0,0,0,0,0,'','0','','','',-1,''
3,'abcdef','e80b5017','Ashish Rungta','ASHTME@YAHOO.COM',1,0,'','','','','','',0,'http://www.rootkit.com/usericons/abcdef.jpg','',0,'',0,0,0,0,0,0,0,'','0','','','',-1,''
4,'abel','cd779e8a','Adi A','adia@opsynet.com',1,0,'','','','','','',0,'http://www.rootkit.com/usericons/abel.jpg','',0,'',0,0,0,0,0,0,0,'','0','','','',-1,''
5,'abhi0070','a6a7c0ce','kbcack','unknownbuddy@yahoo.com',1,0,'','','','','','',0,'http://www.rootkit.com/usericons/abhi0070.jpg','',0,'',0,0,0,0,0,0,0,'','0','','','',-1,''
6,'abm','e50624ea','alex murphy','abm@mitre.org',1,0,'','','','','','',0,'http://www.rootkit.com/usericons/abm.jpg','',0,'',0,0,0,0,0,0,0,'','0','','','',-1,''
7,'abraxas','7f9cc44f','Alex Mellor','i&amp;#95;love&amp;#95;g0ats@hotmail.com',1,0,'','','','','','',0,'http://www.rootkit.com/usericons/abraxas.jpg','',0,'',0,0,0,0,0,0,0,'','0','','','',-1,''
8,'acc&amp;#95;chen','c4025c6f','Jun.chen','johnychen@netease.com',1,0,'','','','','','',0,'http://www.rootkit.com/usericons/acc&amp;#95;chen.jpg','',0,'',0,0,0,0,0,0,0,'','0','','','',-1,''
9,'access55','e9f5bda6','WHY YOU ASK','access55@manx.net',1,0,'','','','','','',0,'http://www.rootkit.com/usericons/access55.jpg','',0,'',0,0,0,0,0,0,0,'','0','','','',-1,''
10,'accobra','66f363a6','Rob','rlstephe@yahoo.com',1,0,'','','','','','',0,'http://www.rootkit.com/usericons/accobra.jpg','',0,'',0,0,0,0,0,0,0,'','0','','','',-1,''
..................
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I can see a faint smile on your face now :) Don't worry you will be having a strong urge to show off at the end of this tutorial. Just a few steps more.&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;cut&amp;#95;me&amp;#95;baby&amp;#95;one&amp;#95;more&amp;#95;time...&quot;&gt;&lt;/a&gt;cut me baby one more time...&lt;/h2&gt;&lt;p&gt;Ok. Before we extract out the user and  password. You need to know what is &lt;code&gt;cut&lt;/code&gt; command. The &lt;code&gt;cut&lt;/code&gt; command works on field seperators.&lt;/p&gt;&lt;p&gt;To understand how &lt;code&gt;cut&lt;/code&gt; works before we contd, lets take an example. Do&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ cat /etc/passwd
.....
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/bin/sh
bin:x:2:2:bin:/bin:/bin/sh
........
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;All the fields in this file are separated by &lt;code&gt;:&lt;/code&gt; as follows&lt;/p&gt;&lt;ol&gt;&lt;li&gt;userid&lt;/li&gt;&lt;li&gt;password&lt;/li&gt;&lt;li&gt;uid&lt;/li&gt;&lt;li&gt;... and so on.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;What if you want to extract only user and uid from this file? This is where &lt;code&gt;cut&lt;/code&gt; comes into play. &lt;code&gt;cut&lt;/code&gt; command works on field separators, for each line. By default field separator is space but we can specify any character as field separator.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ cut -d&amp;quot;:&amp;quot; -f1,3 /etc/passwd
........
root:0
daemon:1
bin:2
sys:3
..........
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;&lt;a name=&quot;it's&amp;#95;time&amp;#95;to&amp;#95;cut!&quot;&gt;&lt;/a&gt;It's time to cut!&lt;/h2&gt;&lt;p&gt;Nice.. Now we are going to cut each line by comma. Why? Cause each field is seperated by commas. We want user and hash which is 2nd and 3rd field if the field separator is &lt;code&gt;,&lt;/code&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ grep &amp;quot;INSERT INTO \`people\`&amp;quot; database | sed s/\&amp;#41;,\&amp;#40;/\\n/g | cut -d &amp;quot;,&amp;quot; -f2,3 | head
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;Field seperator is a comma =&gt; &lt;code&gt;-d &amp;quot;,&amp;quot;&lt;/code&gt;&lt;/li&gt;&lt;li&gt;Select only column 2 and 3 =&gt; &lt;code&gt;-f2,3&lt;/code&gt;&lt;/li&gt;&lt;li&gt;And pass it to &lt;code&gt;head&lt;/code&gt; so that we get first ten lines only (its easy to see output and be sure that the command is working)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;It should give&lt;/p&gt;&lt;pre&gt;&lt;code&gt;.........
'admin','51a42fa118e77f95f70d4efff4395f8d'
'aaronh','7cb8b36d'
'abcdef','e80b5017'
'abel','cd779e8a'
'abhi0070','a6a7c0ce'
'abm','e50624ea'
'abraxas','7f9cc44f'
'acc&amp;#95;chen','c4025c6f'
'access55','e9f5bda6'
'accobra','66f363a6'
.....
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;a href='http://haikugirl.me/2014/04/06/word-of-the-week-%E3%81%99%E3%81%94%E3%81%84/'&gt;すごい (凄い)&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;victory&amp;#95;is&amp;#95;close!&quot;&gt;&lt;/a&gt;Victory is close!&lt;/h2&gt;&lt;p&gt;Now we just need to remove those single quotes. You know what to do :)&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ grep &amp;quot;INSERT INTO \`people\`&amp;quot; database | sed s/\&amp;#41;,\&amp;#40;/\\n/g | cut -d &amp;quot;,&amp;quot; -f2,3 | sed s/\'//g | head
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;i.e. &lt;/p&gt;&lt;ul&gt;&lt;li&gt;replace all &lt;code&gt;&amp;#40;/g&amp;#41;&lt;/code&gt;&lt;/li&gt;&lt;li&gt;single quotes &lt;code&gt;/\'&lt;/code&gt; as Single Quotes is a special character)&lt;/li&gt;&lt;li&gt;with Nothing &lt;code&gt;//&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code&gt;......
admin,51a42fa118e77f95f70d4efff4395f8d
aaronh,7cb8b36d
abcdef,e80b5017
abel,cd779e8a
abhi0070,a6a7c0ce
abm,e50624ea
abraxas,7f9cc44f
acc&amp;#95;chen,c4025c6f
access55,e9f5bda6
accobra,66f363a6
....
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Last thing, and its Game Over, replace &lt;code&gt;,&lt;/code&gt; with &lt;code&gt;:&lt;/code&gt;&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;finish&amp;#95;him!&quot;&gt;&lt;/a&gt;Finish Him!&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ grep &amp;quot;INSERT INTO \`people\`&amp;quot; database | sed s/\&amp;#41;,\&amp;#40;/\\n/g | cut -d &amp;quot;,&amp;quot; -f2,3 | sed s/\'//g | sed s/,/:/g | head
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;:) Done!&lt;/p&gt;&lt;p&gt;You can now remove the head command to check if its working for all files.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ grep &amp;quot;INSERT INTO \`people\`&amp;quot; database | sed s/\&amp;#41;,\&amp;#40;/\\n/g | cut -d &amp;quot;,&amp;quot; -f2,3 | sed s/\'//g | sed s/,/:/g
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Awesome!&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;let's&amp;#95;bring&amp;#95;awk&amp;#95;to&amp;#95;the&amp;#95;party!&quot;&gt;&lt;/a&gt;Let's bring awk to the party!&lt;/h2&gt;&lt;p&gt;Wait there's more. What if you want hash first and user name later? i.e.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;password1:user1
password2:user2
....

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;:)&lt;/p&gt;&lt;p&gt;With sed you can do, but its too complicated. Meet Sed's Elder brother Awk. &lt;code&gt;Awk&lt;/code&gt; is more powerful (and more complicated). Awk is used mainly for data extraction and reporting tool.&lt;/p&gt;&lt;p&gt;Do,&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ grep &amp;quot;INSERT INTO \`people\`&amp;quot; database | sed s/\&amp;#41;,\&amp;#40;/\\n/g | cut -d &amp;quot;,&amp;quot; -f2,3 | sed s/\'//g | sed s/,/:/g | awk -F':' '{print $2 &amp;quot;:&amp;quot; $1}' | head
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;What we did?&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;-F&lt;/code&gt; is like &lt;code&gt;-d&lt;/code&gt; in &lt;code&gt;cut&lt;/code&gt; command, i.e. specifying field separator.&lt;/li&gt;&lt;li&gt;Each field is put in &lt;code&gt;$1 $2 $3&lt;/code&gt; etc, where &lt;code&gt;$1&lt;/code&gt; is username and &lt;code&gt;$2&lt;/code&gt; is password.&lt;/li&gt;&lt;li&gt;By &lt;code&gt;'{print $2 &amp;quot;:&amp;quot; $1}'&lt;/code&gt; we are asking it to print it in reverse order. Don't give Comma in between &lt;code&gt;$2&lt;/code&gt; and &lt;code&gt;$1&lt;/code&gt; as it will replace the field separator with space.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Output -&gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;.......
51a42fa118e77f95f70d4efff4395f8d:admin
7cb8b36d:aaronh
e80b5017:abcdef
cd779e8a:abel
a6a7c0ce:abhi0070
e50624ea:abm
7f9cc44f:abraxas
c4025c6f:acc&amp;#95;chen
e9f5bda6:access55
66f363a6:accobra
..........
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now just redirect the final output (without the &lt;code&gt;head&lt;/code&gt; command) to a file.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ grep &amp;quot;INSERT INTO \`people\`&amp;quot; database | sed s/\&amp;#41;,\&amp;#40;/\\n/g | cut -d &amp;quot;,&amp;quot; -f2,3 | sed s/\'//g | sed s/,/:/g | awk -F':' '{print $2 &amp;quot;:&amp;quot; $1}' &amp;gt; output.txt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;With &lt;code&gt;&amp;gt; output.txt&lt;/code&gt; we are redirecting the final output of &lt;code&gt;awk&lt;/code&gt; command into the file i.e. &lt;code&gt;output.txt&lt;/code&gt; rather than on the terminal.&lt;/p&gt;&lt;p&gt;Now just for curiosity, to count the number of users we got we do&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ wc output.txt -l
81450
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So we have &lt;strong&gt;81450&lt;/strong&gt; users in this final &lt;code&gt;output.txt&lt;/code&gt; Pheww Thats a lot!&lt;/p&gt;&lt;p&gt;OK.&lt;/p&gt;&lt;h2&gt;&lt;a name=&quot;(optional)&amp;#95;super&amp;#95;crisp&amp;#95;command&amp;#95;mode&amp;#95;on!&quot;&gt;&lt;/a&gt;(Optional) Super Crisp Command Mode On!&lt;/h2&gt;&lt;p&gt;Above command has Total 6 Commands (excluding &lt;code&gt;&amp;gt; output.txt&lt;/code&gt;) i.e.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;grep &amp;quot;INSERT INTO \`people\`&amp;quot; database
| sed s/\&amp;#41;,\&amp;#40;/\\n/g
| cut -d &amp;quot;,&amp;quot; -f2,3
| sed s/\'//g
| sed s/,/:/g
| awk -F',' '{print $2 $1}'
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Do you think we can crisp it down to only 2 Commands!! No, I am not crazy. It is possible. Why do I want to do it? Just cause we can ;)&lt;/p&gt;&lt;p&gt;Wanna See ? :) Here's the command&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ sed -n /&amp;quot;INSERT INTO \`people\`&amp;quot;/s/\&amp;#41;,\&amp;#40;/\\n/pg database | gawk -F\' '{print $4 &amp;quot;:&amp;quot; $2}' | head
.....
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;PS: &lt;code&gt;head&lt;/code&gt; command is for you to see the short version of the output, not required though&lt;/p&gt;&lt;p&gt;What is going on? Thats for you to figure it out.&lt;/p&gt;&lt;p&gt;Have Fun! :D&lt;/p&gt;
</description>
<pubDate>
Sun, 29 May 2016 00:00:00 +0530
</pubDate>
</item>
<item>
<guid>
http://firesofmay.github.io/posts/2015-08-26-setup-cryogen.html
</guid>
<link>
http://firesofmay.github.io/posts/2015-08-26-setup-cryogen.html
</link>
<title>
How to setup your own blog on Github using Cryogen
</title>
<description>
&lt;p&gt;For quite sometime I have been looking for a nice way to setup my blog. I have looked at various options but wasn't happy with any of them.&lt;/p&gt;&lt;h3&gt;&lt;a name=&quot;selection&amp;#95;criteria:&quot;&gt;&lt;/a&gt;Selection Criteria:&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;I should be able to edit it within Emacs/Another nice Markdown Editor.&lt;/li&gt;&lt;li&gt;It should be markdown based so I don't face weird editor issues.&lt;/li&gt;&lt;li&gt;Code highlighting should work for Clojure.&lt;/li&gt;&lt;li&gt;It should work on mobile/desktop nicely.&lt;/li&gt;&lt;li&gt;Tags should be available.&lt;/li&gt;&lt;li&gt;RSS feeds should work.&lt;/li&gt;&lt;li&gt;Preferably free and scales well.&lt;/li&gt;&lt;li&gt;Have some control on the setup but it should just work.&lt;/li&gt;&lt;li&gt;Should have an option to add comments.&lt;/li&gt;&lt;li&gt;It would be awesome if I can hack it if I need to.&lt;/li&gt;&lt;li&gt;I should be able to point it to my custom domain.&lt;/li&gt;&lt;li&gt;It should be under version control.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;And I think finally &lt;a href='http://cryogenweb.org/'&gt;Cryogen&lt;/a&gt;/Github/Emacs/&lt;a href='macdown.uranusjr.com'&gt;MacDown&lt;/a&gt; has nailed it for me.&lt;/p&gt;&lt;p&gt;Even though the documentation is fairly good, I wasn't clear how to setup blog and repo together. I'll just assume you want to setup it as &lt;a href='username.github.io'&gt;username.github.io&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Before you move on, make sure you have checked out the &lt;a href='http://cryogenweb.org/docs/getting-started.html'&gt;actual documentation&lt;/a&gt; to get an idea of what we are going to do and if this setup is suitable for you or not.&lt;/p&gt;&lt;h3&gt;&lt;a name=&quot;setup&amp;#95;steps:&quot;&gt;&lt;/a&gt;Setup Steps:&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Go to github and create one repo called &lt;code&gt;cryogen-blog&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;Open up commandline, switch to your projects directory and run the following:&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ lein new cryogen my-blog
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;Run the server so that it compiles any new changes&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ lein ring server
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;Open another terminal&lt;/li&gt;&lt;li&gt;Switch to &lt;code&gt;my-blog&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ cd my-blog
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;Open resources/templates/config.edn and update the following values&lt;ul&gt;&lt;li&gt;:site-url &lt;code&gt;&amp;quot;http://username.github.io/&amp;quot;&lt;/code&gt;&lt;/li&gt;&lt;li&gt;:blog-prefix &lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;&lt;/li&gt;&lt;li&gt;:site-title &lt;code&gt;&amp;quot;your site title&amp;quot;&lt;/code&gt;&lt;/li&gt;&lt;li&gt;:author &lt;code&gt;&amp;quot;@twitterhandle&amp;quot;&lt;/code&gt;&lt;/li&gt;&lt;li&gt;:description &lt;code&gt;&amp;quot;your description&amp;quot;&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Make sure .gitignore has &lt;code&gt;/resources/public/&lt;/code&gt; in it.&lt;/li&gt;&lt;li&gt;Initialize your cryogen-blog by running the following in &lt;code&gt;my-blog&lt;/code&gt; directory&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ git init
$ git commit -m &amp;quot;first commit&amp;quot;
$ git remote add origin git@github.com:&amp;lt;YOUR-USERNAME&amp;gt;/cryogen-blog.git
$ git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;But this will only push a new repo, this does not create any blog.&lt;/li&gt;&lt;li&gt;To create the blog, go to github again &amp; create another repo with same name as your username, i.e. &lt;code&gt;username.github.io&lt;/code&gt;&lt;/li&gt;&lt;li&gt;Run&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ cd my-blog/resources/public
$ git init
$ git add README.md
$ git commit -m &amp;quot;first commit&amp;quot;
$ git remote add origin git@github.com:&amp;lt;YOUR-USERNAME&amp;gt;/&amp;lt;YOUR-USERNAME&amp;gt;.github.io.git
$ git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;And now check &lt;code&gt;YOUR-USERNAME.github.io&lt;/code&gt;, you should see your blog.&lt;/li&gt;&lt;li&gt;Check &lt;a href='http://cryogenweb.org/docs/writing-posts.html'&gt;this&lt;/a&gt; for how to write posts.&lt;/li&gt;&lt;li&gt;Then check &lt;code&gt;localhost:3000&lt;/code&gt; to make sure it all looks good.&lt;/li&gt;&lt;li&gt;To push new changes simply run the following (from &lt;code&gt;my-blog&lt;/code&gt; directory)&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ git add . &amp;amp;&amp;amp; git commit -am &amp;quot;WIP&amp;quot; &amp;amp;&amp;amp; git push
$ cd resources/public &amp;amp;&amp;amp;  git add . &amp;amp;&amp;amp; git commit -am &amp;quot;WIP&amp;quot; &amp;amp;&amp;amp; git push &amp;amp;&amp;amp; cd ../../
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;a name=&quot;automate&amp;#95;the&amp;#95;deployment&quot;&gt;&lt;/a&gt;Automate the deployment&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;You can make that as a command as well.&lt;/li&gt;&lt;li&gt;Create the following snippet as a command deploy.sh&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;#!/bin/sh

echo &amp;quot;Deploying blog post&amp;quot;
git add .
git commit -am &amp;quot;WIP&amp;quot;
git push
cd resources/public &amp;amp;&amp;amp;  git add . &amp;amp;&amp;amp; git commit -am &amp;quot;WIP&amp;quot; &amp;amp;&amp;amp; git push &amp;amp;&amp;amp; cd ../../
open http://YOUR-USERNAME.github.io
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;Make it executable&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ chmod +x deploy.sh
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;&lt;li&gt;Make changes and deploy!&lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ ./deploy.sh
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;&lt;a name=&quot;references:&quot;&gt;&lt;/a&gt;References:&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Thanks to &lt;a href='https://github.com/tangrammer/cryogen-blog/blob/master/resources/templates/README.md#instructions-to-make-changes'&gt;tangrammer's instructions here&lt;/a&gt;&lt;/li&gt;&lt;li&gt;To setup custom domain name with namecheap check &lt;a href='http://davidensinger.com/2013/03/setting-the-dns-for-github-pages-on-namecheap/'&gt;this&lt;/a&gt; link&lt;/li&gt;&lt;li&gt;If you do add custom domain name make sure you add &lt;code&gt;CNAME&lt;/code&gt; to &lt;code&gt;:keep-files&lt;/code&gt; otherwise it'll get deleted.&lt;/li&gt;&lt;/ul&gt;
</description>
<pubDate>
Wed, 26 Aug 2015 00:00:00 +0530
</pubDate>
</item>
<item>
<guid>
http://firesofmay.github.io/posts/2012-12-15-vector-of-maps.html
</guid>
<link>
http://firesofmay.github.io/posts/2012-12-15-vector-of-maps.html
</link>
<title>
Manipulating vector of maps - Clojure
</title>
<description>
&lt;p&gt;So here is a vector of maps. Map contains name, age and school as keys. &lt;em&gt;Note&lt;/em&gt; that school is an optional key.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;clojure&quot;&gt;&amp;#40;def student-grades &amp;#91;{:age 21, :name &amp;quot;Frank&amp;quot;, :school &amp;quot;ABC&amp;quot;}
                     {:age 23, :name &amp;quot;Shawn&amp;quot;}
                     {:age 11, :name &amp;quot;Eliot&amp;quot;, :school &amp;quot;XYZ&amp;quot;}&amp;#93;&amp;#41;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now I would like to take that vector of maps and return the same name, increment the age and if school key is missing return &lt;code&gt;-&lt;/code&gt; as its value else return the school itself. So I write a function which take one map like that and de-structure its keys.&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;clojure&quot;&gt;&amp;#40;defn get-grades
  &amp;quot;This will take a map of name age school as keys and
   return a map of name, incremented age and
   if school is not given then '-'
   else the name of the school itself.&amp;quot;
  &amp;#91;{:keys &amp;#91;name age school&amp;#93;}&amp;#93;
  {:name name
   :age &amp;#40;inc age&amp;#41;
   :school &amp;#40;or school &amp;quot;-&amp;quot;&amp;#41;}&amp;#41;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And now all I have to do is map that function onto that whole vector of maps and we get&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;clojure&quot;&gt;&amp;#40;map get-grades
     student-grades&amp;#41;
&amp;#40;{:name &amp;quot;Frank&amp;quot;, :age 22, :school &amp;quot;ABC&amp;quot;}
 {:name &amp;quot;Shawn&amp;quot;, :age 24, :school &amp;quot;-&amp;quot;}
 {:name &amp;quot;Eliot&amp;quot;, :age 12, :school &amp;quot;XYZ&amp;quot;}&amp;#41;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Notice age has been incremented, and if school is empty it is returning a &lt;code&gt;-&lt;/code&gt;&lt;/p&gt;
</description>
<pubDate>
Sat, 15 Dec 2012 00:00:00 +0530
</pubDate>
</item>
<item>
<guid>
http://firesofmay.github.io/posts/2012-08-27-intro-to-kafka.html
</guid>
<link>
http://firesofmay.github.io/posts/2012-08-27-intro-to-kafka.html
</link>
<title>
Intro to kafka
</title>
<description>
&lt;h3&gt;&lt;a name=&quot;what&amp;#95;is&amp;#95;kafka?&quot;&gt;&lt;/a&gt;What is Kafka?&lt;/h3&gt;Kafka provides a fast, distributed, highly scalable, highly available, publish-subscribe messaging system. It solves communicatin and integration between components of large software systems.&lt;p&gt;Distributed Messaging System (Other messaging systems are RabbitMQ, ActiveMQ etc)&lt;/p&gt;&lt;p&gt;By distributed we mean it'll scale out, it'll work on multiple servers.&lt;/p&gt;&lt;p&gt;Getting data from one system to another is a challenging problem It can easily become a mess one everything is trying to talk directly to everything else. You need someone to coordinate that flow of data across systems.&lt;/p&gt;&lt;p&gt;Kakfa solves just that problem. Having Producers write data to Kafka, and Having Consumers read data from Kafka.&lt;/p&gt;&lt;h3&gt;&lt;a name=&quot;unique&amp;#95;about&amp;#95;kafka?&quot;&gt;&lt;/a&gt;Unique about Kafka?&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Large number of Consumers&lt;/li&gt;&lt;li&gt;* Scales really well with really large number of consumers.&lt;/li&gt;&lt;li&gt;Ad-hoc consumers&lt;/li&gt;&lt;li&gt;* Kafka doesn't need to know you need data from Kafka.&lt;/li&gt;&lt;li&gt;* Not a performance issue.&lt;/li&gt;&lt;li&gt;Batch consumers&lt;/li&gt;&lt;li&gt;* Can have a consumer waking up say every hour, getting that hours worth of data and processing that.&lt;/li&gt;&lt;li&gt;* This was a performance issue before Kafka.&lt;/li&gt;&lt;li&gt;* Great for batch systems like Hadoop.&lt;/li&gt;&lt;li&gt;Automatic recovery from broker failures.&lt;/li&gt;&lt;li&gt;* If one of the brokers go down, data is not lost.&lt;/li&gt;&lt;li&gt;* There maybe tiny delay in that scenario though.&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;a name=&quot;what&amp;#95;do&amp;#95;we&amp;#95;do&amp;#95;with&amp;#95;kafka?&quot;&gt;&lt;/a&gt;What do we do with Kafka?&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Messaging - Communication between apps&lt;/li&gt;&lt;li&gt;* Using to it to notify one to another.&lt;/li&gt;&lt;li&gt;Website Activity Tracking (Clicks, Searches)&lt;/li&gt;&lt;li&gt;* A small kafka cluster can support large number of events per second.&lt;/li&gt;&lt;li&gt;Metrics collection - instead of writing to logs&lt;/li&gt;&lt;li&gt;* If we would like to store and analyze different kinds of data about machines, cpu memory, collect data and keep it in kafka, and other systems can analyze it.&lt;/li&gt;&lt;li&gt;Audit&lt;/li&gt;&lt;li&gt;Source &amp; target of Stream Processing.&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;a name=&quot;what&amp;#95;kafka&amp;#95;doesn't&amp;#95;do?&quot;&gt;&lt;/a&gt;What Kafka Doesn't do?&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;It's not and end-user solution. You need to write code to use it.&lt;/li&gt;&lt;li&gt;* Non developer cannot use this. Not an equivalent of log stash for example.&lt;/li&gt;&lt;li&gt;Not a drop-in JMS (Java Messaging Service) replacement.&lt;/li&gt;&lt;li&gt;* Example cannot just replace ActiveMQs with Kafka as it has different APIs/Semantics	.&lt;/li&gt;&lt;li&gt;It doesn't have many ready-made producers/consumers.&lt;/li&gt;&lt;li&gt;No data transformations.&lt;/li&gt;&lt;li&gt;No encryption/auth/authentication (yet).	&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;a name=&quot;misc&quot;&gt;&lt;/a&gt;Misc&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Kafka is written in Scala and runs on the JVM.&lt;/li&gt;&lt;li&gt;Can store many TB of messages&lt;/li&gt;&lt;li&gt;Messages live for a certain time.&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;a name=&quot;kafka&amp;#95;has&quot;&gt;&lt;/a&gt;Kafka has&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Groups&lt;/li&gt;&lt;li&gt;Partitions&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;In Kafka a server is called a broker&lt;/p&gt;&lt;p&gt;Producers sends the message to broker to a given topic Consumers connects to broker and tell them what topic they want to listen to and what group they belong to.&lt;/p&gt;&lt;p&gt;Each Producer/Broker/Consumer are easy to add/remove from to the system. And every other component gets notified accordingly.&lt;/p&gt;&lt;p&gt;To coordinate among each other Kafka uses Zookeeper. Say when a new broker is started up, it'll write its presence to Zookeeper, so that both producers and subscribers will get call backs that new broker is available. Similarly when broker goed down. Similarly for producers/consumers.&lt;/p&gt;&lt;h3&gt;&lt;a name=&quot;why&amp;#95;is&amp;#95;kafka&amp;#95;fast?&quot;&gt;&lt;/a&gt;Why is Kafka Fast?&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;No message committing. In other similar systems, consumer has to commit that it has received the message, In Kafka thats not the case.&lt;/li&gt;&lt;li&gt;When broker recieves the message from producer, all it does is appends it to a log file.&lt;/li&gt;&lt;li&gt;No state on Broker. Broker does not store which user were getting which messages. Hence makes it fast&lt;/li&gt;&lt;li&gt;Kafka appends file upstream (Producer) &amp; writes file downstream (Consumer).&lt;/li&gt;&lt;li&gt;Offset is the King.&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;a name=&quot;kafka&amp;#95;basics&quot;&gt;&lt;/a&gt;Kafka Basics&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;Messages are organized into &lt;strong&gt;topics&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;* When you send a message you send to a topic&lt;/li&gt;&lt;li&gt;* When you are reading a message you need to say what topic to read from.&lt;/li&gt;&lt;li&gt;* When you design your system you need to design it around differnt topics of interest for different consumers.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Producers&lt;/strong&gt; push messages&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Consumers&lt;/strong&gt; pull messages&lt;/li&gt;&lt;li&gt;* Consumers subscribe to topic and they get the messages.&lt;/li&gt;&lt;li&gt;Kafka runs in a cluster. Nodes are called &lt;strong&gt;brokers&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;A single topic can have multiple partitions.&lt;/li&gt;&lt;li&gt;* Some topics can have lot of data so you want to partition it across multiple machines. And then you can put each partition on a seperate machine.&lt;/li&gt;&lt;li&gt;* Multiple Consumers can also be configured to read from a particular topic and each of those consumers can read from a particular partition. Helps in high throughput.&lt;/li&gt;&lt;li&gt;* Inside each partition you'll see ids. Those ids are called offset.&lt;/li&gt;&lt;li&gt;* When consumer consumes messages you say I want to consume messages from this offset.&lt;/li&gt;&lt;li&gt;* Say you a consumer broke connection, you reconnect and say what offset you want to continue from. That way messages are not lost and at the same time brokers don't have to maintain any kind of state making them super fast.&lt;/li&gt;&lt;li&gt;* Producer partitions data and adds it in partitions, hence order is maintained withing a partition.&lt;/li&gt;&lt;li&gt;* Order of messages are maintained only withing a partition, not across partitions.&lt;/li&gt;&lt;li&gt;* A specific message is uniquely identified by topic+partition+offset&lt;/li&gt;&lt;li&gt;* Partition is a log&lt;/li&gt;&lt;li&gt;* You write to it sequentially.&lt;/li&gt;&lt;li&gt;* Multiple consumers can read from multiple points of the log.&lt;/li&gt;&lt;li&gt;* Data is stored for a certain amount of time say a week.&lt;/li&gt;&lt;li&gt;* If a consumer hasn't read that data withing that period that data is lost else it can catch up within that given time.&lt;/li&gt;&lt;/ul&gt;	&lt;p&gt;CONTINUE FROM VIDEO 2 AT 3mins 	&lt;/p&gt;&lt;p&gt;References:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href='https://vimeo.com/62298867'&gt;Apache Kafka - distributed publish-subscribe messaging system - Morten Kjetland&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href='http://shop.oreilly.com/product/0636920038603.do'&gt;Introduction to Apache Kafka (Paid)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Kafka Slides - http://web.stanford.edu/class/ee380/Abstracts/141112-slides.pdf&lt;/li&gt;&lt;li&gt;http://kafka.apache.org/08/design.html&lt;/li&gt;&lt;li&gt;https://www.hakkalabs.co/articles/apache-kafka-top-12-tutorials-on-performance-more&lt;/li&gt;&lt;li&gt;http://www.happiestminds.com/sites/default/files/article/ANALYTICS&lt;i&gt;ON&lt;/i&gt;BIG&lt;i&gt;FAST&lt;/i&gt;DATA&lt;i&gt;USING&lt;/i&gt;A&lt;i&gt;REALTIME&lt;/i&gt;STREAM&lt;i&gt;DATA&lt;/i&gt;PROCESSING_ARCHITECTURE.pdf&lt;/li&gt;&lt;li&gt;http://www.quora.com/Whats-the-best-way-to-start-learning-Kafka&lt;/li&gt;&lt;/ul&gt;
</description>
<pubDate>
Mon, 27 Aug 2012 00:00:00 +0530
</pubDate>
</item>
</channel>
</rss>
